package moneyconverter;

import static java.lang.Double.parseDouble;
import java.text.DecimalFormat;

/**
 *
 * @author danielhiggins
 */
public class calculate extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public calculate() {
        initComponents();
    }
    public Money m = new Money();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        amount = new javax.swing.JTextField();
        converted = new javax.swing.JLabel();
        enterAmount = new javax.swing.JLabel();
        currency = new javax.swing.JComboBox<>();
        moneyconverter = new javax.swing.JLabel();
        calculate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountActionPerformed(evt);
            }
        });

        converted.setText("Converted:");

        enterAmount.setText("Enter Amount:");

        currency.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "USD to Peso", "Peso to USD", "Bitcoin to USD", "USD to Bitcoin", "USD to Japanese Yen", "Japanese Yen to USD", "USD to Chin Yen", "Chin Yen to USD", "Euro to USD", "USD to Euro" }));
        currency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currencyActionPerformed(evt);
            }
        });

        moneyconverter.setText("Money Converter");

        calculate.setText("Convert");
        calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(enterAmount)
                                .addGap(26, 26, 26)
                                .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(converted))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(calculate))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(currency, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(moneyconverter, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(moneyconverter)
                .addGap(18, 18, 18)
                .addComponent(currency, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calculate, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enterAmount))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(converted)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void amountActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void currencyActionPerformed(java.awt.event.ActionEvent evt) {                                         

    }                                        

    private void calculateActionPerformed(java.awt.event.ActionEvent evt) {                                          
        try {
            double result = 0;
            String am = amount.getText();
            double amo = parseDouble(am);
            int index = currency.getSelectedIndex();
            String cur = currency.getItemAt(index);
            DecimalFormat df = new DecimalFormat("#.00");
            
            switch (cur) {
                case "USD to Bitcoin":
                    result = m.USDtoBit(amo);
                    break;
                case "Bitcoin to USD":
                    result = m.BittoUSD(amo);
                    break;
                case "USD to Peso":
                    result = m.USDtoPeso(amo);
                    break;
                case "Peso to USD":
                    result = m.PesotoUSD(amo);
                    break;
                case "USD to Japanese Yen":
                    result = m.USDtoJyen(amo);
                    break;
                case "Japanese Yen to USD":
                    result = m.JyentoUSD(amo);
                    break;
                case "Chin Yen to USD":
                    result = m.CyuantoUSD(amo);
                    break;
                case "USD to Chin Yen":
                    result = m.USDtoCyuan(amo);
                    break;
                case "USD to Euro":
                    result = m.USDtoEuro(amo);
                    break;
                case "Euro to USD":
                    result = m.EurotoUSD(amo);
                    break;
                default:
                    result = -1;
                    break;
            }

            String answer = String.valueOf(df.format(result));

            if (!answer.equalsIgnoreCase("-1")) {
                converted.setText("Converted: " + answer);
            } else {
                converted.setText("Converted: Please select a conversion.");
            }
        } catch (Exception e) {

            System.out.println(e.toString());
        }        // TODO add your handling code here:
    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calculate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calculate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calculate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calculate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new calculate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextField amount;
    private javax.swing.JButton calculate;
    private javax.swing.JLabel converted;
    private javax.swing.JComboBox<String> currency;
    private javax.swing.JLabel enterAmount;
    private javax.swing.JLabel moneyconverter;
    // End of variables declaration                   
}
